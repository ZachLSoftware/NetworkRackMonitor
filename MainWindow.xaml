<Window x:Class="RackMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RackMonitor"
        xmlns:vm="clr-namespace:RackMonitor.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="800" Width="600"
        x:Name="RackWindow">
    <Window.Resources>
        <!-- Style for a single slot -->
        <Style x:Key="SlotItemStyle" TargetType="Border">
            <Setter Property="Background" Value="#DDEEFF"/>
            <Setter Property="BorderBrush" Value="#FFB0B0B0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="MinHeight" Value="50"/>
            <Setter Property="CornerRadius" Value="3"/>
        </Style>

        <local:TupleConverter x:Key="TupleConverter" />
        <ControlTemplate x:Key="ContentOnlyTemplate" TargetType="{x:Type Button}">
            <ContentPresenter />
        </ControlTemplate>

        <!-- CONTEXT MENU FOR A ROW (to change layout) - Updated -->
        <ContextMenu x:Key="RowContextMenu">
            <MenuItem Header="Add Slot" 
                      Command="{Binding PlacementTarget.Tag.AddSlotCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding Path=.}"/>
            <MenuItem Header="Re-combine to Single" 
                      Command="{Binding PlacementTarget.Tag.MergeUnitCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding Path=.}"/>
        </ContextMenu>

        <!-- CONTEXT MENU FOR A SLOT (to add a device) -->
        <ContextMenu x:Key="SlotContextMenu">
            <MenuItem Header="Add Device">
                <MenuItem Header="Adder Device"
                          Command="{Binding PlacementTarget.Tag.ChangeDeviceTypeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource TupleConverter}">
                            <Binding Path="."/>

                            <Binding Source="AdderDevice"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="Computer"
                          Command="{Binding PlacementTarget.Tag.ChangeDeviceTypeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource TupleConverter}">
                            <Binding Path="."/>
                            <Binding Source="ComputerDevice"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="Network Device"
                          Command="{Binding PlacementTarget.Tag.ChangeDeviceTypeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                    <MenuItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource TupleConverter}">
                            <Binding Path="."/>
                            <Binding Source="NetworkDevice"/>
                        </MultiBinding>
                    </MenuItem.CommandParameter>
                </MenuItem>
            </MenuItem>
        </ContextMenu>

        <Style x:Key="StatusIP1" TargetType="Ellipse">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Device.Connected}" Value="true">
                    <Setter Property="Fill" Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Device.Connected}" Value="false">
                    <Setter Property="Fill" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.IsPingServiceRunning, ElementName=RackWindow}" Value="false">
                    <Setter Property="Fill" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Device.Ping}" Value="false">
                    <Setter Property="Fill" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StatusIP2" TargetType="Ellipse">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Device.Connected2}" Value="true">
                    <Setter Property="Fill" Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Device.Connected2}" Value="false">
                    <Setter Property="Fill" Value="Red" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.IsPingServiceRunning, ElementName=RackWindow}" Value="false">
                    <Setter Property="Fill" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Device.Ping}" Value="false">
                    <Setter Property="Fill" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- The one and only DataTemplate for a rack row -->
        <DataTemplate x:Key="UnifiedRackUnitTemplate" DataType="{x:Type vm:RackUnitViewModel}">
            <Border BorderBrush="Gray" BorderThickness="1" Margin="2" MinHeight="100">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="35"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- The label gets the context menu to control the whole row's layout -->
                    <TextBlock Text="{Binding Label}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="5,0" Foreground="White"
                               Tag="{Binding DataContext, ElementName=RackWindow}"
                               ContextMenu="{StaticResource RowContextMenu}"/>

                    <!-- This ItemsControl displays the slots (1 for single, 2+ for split) -->
                    <ItemsControl Grid.Column="1" ItemsSource="{Binding Slots}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:SlotViewModel}">
                                <!-- Each slot gets its own context menu to manage its device -->
                                <Border Style="{StaticResource SlotItemStyle}"
                                        Tag="{Binding DataContext, ElementName=RackWindow}"
                                        ContextMenu="{StaticResource SlotContextMenu}">
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" 
                                                      Command="{Binding DataContext.ShowDeviceDetailsCommand, ElementName=RackWindow}"
                                                      CommandParameter="{Binding}"/>
                                    </Border.InputBindings>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <StackPanel Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Device.SecondIPAddress}" Value="False">
                                                            <Setter Property="Grid.RowSpan" Value="2"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Ellipse Style="{StaticResource StatusIP1}" Height="20" Stroke="Black" Width="20"/>
                                            <TextBlock FontSize="12" HorizontalAlignment="Center">
                                                    <Run Text="{Binding Device.IPAddressInfo.CIDRNotation}"/>
                                            </TextBlock>
                                        </StackPanel>

                                        <!-- Container for the second status indicator and its text -->
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Device.SecondIPAddress}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <Ellipse Style="{StaticResource StatusIP2}" Height="20" Stroke="Black" Width="20"/>
                                            <TextBlock FontSize="12" HorizontalAlignment="Center">
                                                    <Run Text="{Binding Device.IPAddressInfo2.CIDRNotation}"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </Grid>
                                    <StackPanel Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4">
                                            <StackPanel.Style>
                                                <Style TargetType="StackPanel">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Style>
                                            <TextBlock FontSize="12">
                                                <Run Text="Name:" FontWeight="Bold"/>
                                                <Run Text="{Binding Device.Name}"/>
                                            </TextBlock>
                                            <TextBlock FontSize="12">
                                                <Run Text="Type:" FontWeight="Bold"/>
                                                <Run Text="{Binding Device.DeviceType}"/>
                                            </TextBlock>

                                            
                                        </StackPanel>
                                        
                                        
                                       
                                        <!-- Text shown when the slot is empty -->
                                        <TextBlock Grid.Column="1" Text="(Empty)" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Gray" FontStyle="Italic">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Border>
        </DataTemplate>
        <Style x:Key="TogglePingMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Header" Value="Enable Ping Service"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPingServiceRunning}" Value="True">
                    <Setter Property="Header" Value="Disable Ping Service"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleWoLMenuItemStyle" TargetType="MenuItem">
            <Setter Property="Header" Value="Enable WoL Service"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsWoLServiceRunning}" Value="True">
                    <Setter Property="Header" Value="Disable WoL Service"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Rack Size">
                <StackPanel Orientation="Horizontal" Margin="4" Focusable="False">
                    <TextBlock Text="Number of U's:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <TextBox Text="{Binding DataContext.NumberOfUnits, ElementName=RackWindow, UpdateSourceTrigger=PropertyChanged}" Width="50" VerticalAlignment="Center"/>
                    <Button Content="Update" Command="{Binding DataContext.UpdateRackSizeCommand, ElementName=RackWindow}" Margin="5,0,0,0"/>
                </StackPanel>
            </MenuItem>
            <MenuItem Header="_Services">
                <MenuItem Style="{StaticResource TogglePingMenuItemStyle}"
                          IsCheckable="True"
                          IsChecked="{Binding DataContext.IsPingServiceRunning, ElementName=RackWindow}"
                          Command="{Binding DataContext.TogglePingServiceCommand, ElementName=RackWindow}"/>
                <MenuItem Style="{StaticResource ToggleWoLMenuItemStyle}"
                          IsCheckable="True"
                          IsChecked="{Binding DataContext.IsWoLServiceRunning, ElementName=RackWindow}"
                          Command="{Binding DataContext.ToggleWoLServiceCommand, ElementName=RackWindow}"/>
            </MenuItem>
        </Menu>

        <Grid Margin="10">
            <Border BorderBrush="Gray" BorderThickness="2" CornerRadius="5" Background="#333" Padding="10">
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <ItemsControl x:Name="MainRackItemsControl" ItemsSource="{Binding DataContext.RackUnits, ElementName=RackWindow}"
                                  ItemTemplate="{StaticResource UnifiedRackUnitTemplate}"/>
                </ScrollViewer>
            </Border>
        </Grid>
    </DockPanel>
</Window>

