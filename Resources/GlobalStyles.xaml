<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="Status" TargetType="Ellipse">
        <Setter Property="Fill" Value="{StaticResource StatusDisabledBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Device.Ping}" Value="False">
                <Setter Property="Fill" Value="{StaticResource StatusDisabledBrush}"/>
            </DataTrigger>

            <!-- Next Priority: Fully Offline (Both IPs down, or IP1 down and IP2 not used) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Ping}" Value="True"/>
                    <Condition Binding="{Binding Device.Connected}" Value="False"/>
                    <Condition Binding="{Binding Device.SecondIPAddress}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Fill" Value="{StaticResource StatusOfflineBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Ping}" Value="True"/>
                    <Condition Binding="{Binding Device.Connected}" Value="False"/>
                    <Condition Binding="{Binding Device.SecondIPAddress}" Value="True"/>
                    <!-- CORRECTED TYPO: Connected2 -->
                    <Condition Binding="{Binding Device.Connected2}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Fill" Value="{StaticResource StatusOfflineBrush}"/>
            </MultiDataTrigger>

            <!-- Next Priority: Warning (One IP down, one IP up) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Ping}" Value="True"/>
                    <Condition Binding="{Binding Device.Connected}" Value="False"/>
                    <Condition Binding="{Binding Device.SecondIPAddress}" Value="True"/>
                    <!-- CORRECTED TYPO: Connected2 -->
                    <Condition Binding="{Binding Device.Connected2}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Fill" Value="{StaticResource StatusWarnBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Ping}" Value="True"/>
                    <Condition Binding="{Binding Device.Connected}" Value="True"/>
                    <Condition Binding="{Binding Device.SecondIPAddress}" Value="True"/>
                    <!-- CORRECTED TYPO: Connected2 -->
                    <Condition Binding="{Binding Device.Connected2}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Fill" Value="{StaticResource StatusWarnBrush}"/>
            </MultiDataTrigger>

            <!-- Lowest Priority (after checks above): Fully Online (Both IPs up, or IP1 up and IP2 not used) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Ping}" Value="True"/>
                    <Condition Binding="{Binding Device.Connected}" Value="True"/>
                    <Condition Binding="{Binding Device.SecondIPAddress}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Fill" Value="{StaticResource StatusOnlineBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Device.Ping}" Value="True"/>
                    <Condition Binding="{Binding Device.Connected}" Value="True"/>
                    <Condition Binding="{Binding Device.SecondIPAddress}" Value="True"/>
                    <!-- CORRECTED TYPO: Connected2 -->
                    <Condition Binding="{Binding Device.Connected2}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Fill" Value="{StaticResource StatusOnlineBrush}"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DataContext.IsPingServiceRunning, ElementName=RackWindow}" Value="false">
                <Setter Property="Fill" Value="{StaticResource StatusDisabledBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CustomToolTipStyle" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Background="{StaticResource PanelBackgroundBrush}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1">
                        <!-- You can set this to 0 if you want absolutely no border -->
                        <ContentPresenter Margin="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource SlotBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SlotBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4,3"/>

        <!-- Attempt to override system colors used by default template parts -->
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                            Focusable="false"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press"
                                            Background="{StaticResource SlotBackgroundBrush}"
                                            BorderBrush="{StaticResource SlotBorderBrush}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}"
                                                   BorderBrush="{TemplateBinding BorderBrush}"
                                                   BorderThickness="{TemplateBinding BorderThickness}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource TextPrimaryBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,5,0"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                               Content="{TemplateBinding SelectionBoxItem}"
                                               ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                               ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                               Margin="5,3,23,3" VerticalAlignment="Center"
                                               HorizontalAlignment="Left"/>
                        <!-- Show Item List -->
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource PanelBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}"/>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- DropDown Items Styling -->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="{StaticResource SlotBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                    <Setter Property="Padding" Value="5"/>
                    <Style.Triggers>
                        <!-- Highlight on mouse over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <!-- Highlight when selected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkTabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- NEW: Style for TabItem headers -->
    <Style x:Key="DarkTabItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{StaticResource SlotBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Selected Tab Style -->
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PanelBackgroundBrush}" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <!-- Mouse Over Tab Style -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SlotBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                        </Trigger>
                        <!-- Disabled Tab Style -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource BorderBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>