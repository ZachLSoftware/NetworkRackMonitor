<UserControl x:Class="RackMonitor.UserControls.DeviceDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:RackMonitor"
             xmlns:userControl="clr-namespace:RackMonitor.UserControls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="400"
             Background="#FF1a1a1a"
             Foreground="White">
    <UserControl.Resources>
        <CollectionViewSource x:Key="GeneralPropertiesView" Source="{Binding DeviceProperties}" Filter="General_Filter"/>
        <CollectionViewSource x:Key="NetworkPropertiesView" Source="{Binding DeviceProperties}" Filter="Network_Filter"/>
        <!--<CollectionViewSource x:Key="ToolsPropertiesView" Source="{Binding DeviceProperties}" Filter="Tools_Filter"/> -->

        <!-- Re-use converters and templates if defined globally in App.xaml,
             otherwise, copy them here from DeviceDetailsWindow.xaml -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibleConverter"/>

        <!-- Template for standard properties -->
        <DataTemplate x:Key="NormalPropertyTemplate">
            <TextBox Text="{Binding PropertyValue, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" MinWidth="100" FontSize="12"  Margin="5"
                     Background="#333" Foreground="White" BorderBrush="#555" CaretBrush="White"/>
        </DataTemplate>

        <DataTemplate x:Key="ModelComboBoxPropertyTemplate">
            <ComboBox SelectedItem="{Binding PropertyValue, Mode=TwoWay}" Style="{StaticResource DarkComboBoxStyle}" ItemsSource="{Binding DataContext.AvailableAdderModels, RelativeSource={RelativeSource AncestorType=UserControl}}"/>

        </DataTemplate>
        
        <!-- Template specifically for the IP Address property -->
        <DataTemplate x:Key="IpAddressPropertyTemplate">
            <Border BorderBrush="#555" BorderThickness="1" Margin="5" VerticalAlignment="Center" Background="#333">
                <!-- Assuming IPControl handles its own dark theme or inherits -->
                <userControl:IPControl Text="{Binding PropertyValue, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
            </Border>
        </DataTemplate>

        <!-- Template for boolean properties using your ToggleButton -->
        <DataTemplate x:Key="BooleanPropertyTemplate">
            <!-- Ensure ToggleButton style matches dark theme -->
            <userControl:ToggleButton IsOn="{Binding PropertyValue, Mode=TwoWay}" VerticalAlignment="Center" Margin="5" Height="25" Width="75" Command="{Binding SaveCommand}"/>
        </DataTemplate>

        <local:PropertyTemplateSelector x:Key="PropertySelector"
                                          NormalTemplate="{StaticResource NormalPropertyTemplate}"
                                          IpAddressTemplate="{StaticResource IpAddressPropertyTemplate}"
                                          BooleanTemplate ="{StaticResource BooleanPropertyTemplate}" 
                                          ModelComboBoxTemplate="{StaticResource ModelComboBoxPropertyTemplate}"/>
    </UserControl.Resources>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header Section -->
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding CurrentDevice.Name}" FontSize="20" FontWeight="Bold" Foreground="{StaticResource AccentBrush}" VerticalAlignment="Center"/>
            <!-- NEW Close Button -->
            <Button Grid.Column="1" Content="×" FontSize="20" FontWeight="Bold" Background="Transparent" Foreground="{StaticResource TextPrimaryBrush}" BorderThickness="0"
                     Command="{Binding DataContext.CloseDetailsPanelCommand, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}"
                     VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-10,0,0"/>
        </Grid>

        <!-- Status Indicator (Example, adjust binding as needed) -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,5,0,10">
            <Ellipse Width="15" Height="15" Margin="0,0,5,0" Stroke="Black">
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Setter Property="Fill" Value="{StaticResource StatusDisabledBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDevice.Connected}" Value="True">
                                <Setter Property="Fill" Value="{StaticResource StatusOnlineBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentDevice.Connected}" Value="False">
                                <Setter Property="Fill" Value="{StaticResource StatusOfflineBrush}"/>
                            </DataTrigger>
                            <!-- Add triggers for Ping Service Off / Device Ping Off if desired -->
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <TextBlock FontWeight="Bold" FontSize="14">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="Unknown"/>
                        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentDevice.Connected}" Value="True">
                                <Setter Property="Text" Value="Online"/>
                                <Setter Property="Foreground" Value="{StaticResource StatusOnlineBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentDevice.Connected}" Value="False">
                                <Setter Property="Text" Value="Offline"/>
                                <Setter Property="Foreground" Value="{StaticResource StatusOfflineBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>


        <!-- Dynamic Properties Section -->
        <TabControl Grid.Row="2" Margin="0,10,0,0" Style="{StaticResource DarkTabControlStyle}" ItemContainerStyle="{StaticResource DarkTabItemStyle}">
            <TabItem Header="General">
                <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" Margin="0,0,0,10">
                    <ItemsControl ItemsSource="{Binding Source={StaticResource GeneralPropertiesView}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibleConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MinWidth="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{Binding DisplayName, StringFormat={}{0}:}" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}" FontWeight="Bold"/>

                                    <ContentPresenter Grid.Column="1"
                                              Content="{Binding}"
                                              ContentTemplateSelector="{StaticResource PropertySelector}"
                                              HorizontalAlignment="Left"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Network">
                <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto" Margin="0,0,0,10">
                    <ItemsControl ItemsSource="{Binding Source={StaticResource NetworkPropertiesView}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0,5" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibleConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MinWidth="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{Binding DisplayName, StringFormat={}{0}:}" VerticalAlignment="Center" Foreground="{StaticResource TextPrimaryBrush}" FontWeight="Bold"/>

                                    <ContentPresenter Grid.Column="1"
                                              Content="{Binding}"
                                              ContentTemplateSelector="{StaticResource PropertySelector}" HorizontalAlignment="Right"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </TabItem>
        </TabControl>

        <!-- Save Button -->
        <Button Grid.Row="3" Content="Save" Command="{Binding SaveCommand}"
                HorizontalAlignment="Right" MinWidth="80" Margin="0,15,0,0"
                Background="{StaticResource AccentBrush}" Foreground="White" BorderThickness="0"/>
        <!-- Removed Close button, using 'X' at top instead -->
    </Grid>
</UserControl>
