<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RackMonitor"
                    xmlns:vm="clr-namespace:RackMonitor.ViewModels"
                    xmlns:usercontrols="clr-namespace:RackMonitor.UserControls"
                    xmlns:converters="clr-namespace:RackMonitor.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/MainWindowStyles.xaml"/>

    </ResourceDictionary.MergedDictionaries>
    <converters:ImageSelector x:Key="ImageSelector"/>
    <!-- CONTEXT MENU FOR A ROW (to change layout) - Updated -->
    <ContextMenu x:Key="RowContextMenu">
        <MenuItem Header="Add Slot"
                      Command="{Binding PlacementTarget.Tag.AddSlotCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding Path=.}"/>
        <MenuItem Header="Re-combine to Single"
                      Command="{Binding PlacementTarget.Tag.MergeUnitCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                      CommandParameter="{Binding Path=.}"/>
    </ContextMenu>

    <!-- CONTEXT MENU FOR A SLOT (to add a device) -->
    <ContextMenu x:Key="SlotContextMenu">
        <MenuItem Header="Add Device">
            <MenuItem Header="Adder Device"
                          Command="{Binding PlacementTarget.Tag.ChangeDeviceTypeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                <MenuItem.CommandParameter>
                    <MultiBinding Converter="{x:Static local:TupleConverter.Instance}">
                        <Binding Path="."/>
                        <Binding Source="AdderDevice"/>
                    </MultiBinding>
                </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem Header="Computer"
                          Command="{Binding PlacementTarget.Tag.ChangeDeviceTypeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                <MenuItem.CommandParameter>
                    <MultiBinding Converter="{x:Static local:TupleConverter.Instance}">
                        <Binding Path="."/>
                        <Binding Source="ComputerDevice"/>
                    </MultiBinding>
                </MenuItem.CommandParameter>
            </MenuItem>
            <MenuItem Header="Network Device"
                          Command="{Binding PlacementTarget.Tag.ChangeDeviceTypeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                <MenuItem.CommandParameter>
                    <MultiBinding Converter="{x:Static local:TupleConverter.Instance}">
                        <Binding Path="."/>
                        <Binding Source="NetworkDevice"/>
                    </MultiBinding>
                </MenuItem.CommandParameter>
            </MenuItem>
        </MenuItem>
    </ContextMenu>
    <DataTemplate x:Key="UnifiedRackUnitTemplate" DataType="{x:Type vm:RackUnitViewModel}">
        <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="0,0,0,1" Margin="2,0,2,0" MinHeight="50">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- The label gets the context menu to control the whole row's layout -->
                <TextBlock Text="{Binding Label}" VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Margin="5,0"
                       Foreground="{StaticResource TextSecondaryBrush}"
                       Tag="{Binding DataContext, ElementName=RackWindow}"
                       ContextMenu="{StaticResource RowContextMenu}"/>

                <!-- This ItemsControl displays the slots (1 for single, 2+ for split) -->
                <ItemsControl Grid.Column="1" ItemsSource="{Binding Slots}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:SlotViewModel}">
                            <!-- Each slot gets its own context menu to manage its device -->
                            <Border Style="{StaticResource SlotItemStyle}"
                                Tag="{Binding DataContext, ElementName=RackWindow}"
                                ContextMenu="{StaticResource SlotContextMenu}">
                                <Border.InputBindings>
                                    <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding DataContext.ShowDeviceDetailsCommand, ElementName=RackWindow}"
                                              CommandParameter="{Binding}"/>
                                </Border.InputBindings>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>


                                    <Ellipse Grid.Column="0" Style="{StaticResource Status}" Height="20" Stroke="Black" Width="20" HorizontalAlignment="Left" Margin="10">
                                        <Ellipse.ToolTip>
                                            <ToolTip Style="{StaticResource CustomToolTipStyle}">
                                                <usercontrols:CustomStatusToolTip Device="{Binding Device}"/>
                                            </ToolTip>
                                        </Ellipse.ToolTip>
                                    </Ellipse>


                                        <Image Grid.Column="1" MaxHeight="40" MaxWidth="100" Margin="5,0" VerticalAlignment="Center">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource ImageSelector}">
                                                    <!-- Binding 1: The whole device object -->
                                                    <Binding Path="Device"/>
                                                    <!-- Binding 2: Specifically watch the Model property -->
                                                    <Binding Path="Device.Model"/>
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    <StackPanel Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <TextBlock FontSize="16" FontWeight="Bold">
                                        <Run Text="{Binding Device.Name}"/>
                                        </TextBlock>
                                        


                                    </StackPanel>

                                    <!-- Text shown when the slot is empty -->
                                    <TextBlock Grid.ColumnSpan="2" Text="(Empty)" VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Foreground="{StaticResource TextSecondaryBrush}" FontStyle="Italic">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Device}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </Border>
    </DataTemplate>

</ResourceDictionary>